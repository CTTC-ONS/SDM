syntax = "proto3";
package sliceable_transceiver_sdm_service;

message empty {

}

message frequency_slot {
    int32 ncf = 1 ;
    uint32 slot_width = 2 ;
}
message equalization {
    string equalizationid = 1 ;
    bool mimo = 2 ;
    uint32 num_taps = 3 ;
}
message optical_signal {
    string opticalchannelid = 1 ;
    enum Constellation {
        qam64 = 0;
        qam16 = 1;
        qam4  = 2;
        qpsk  = 3;
    }
    Constellation constellation = 2 ;
    uint64 bandwidth = 3 ;
    enum Fec {
        hdfec = 0;
        sdfec = 1;
    }
    Fec fec = 4 ;
    message equalization {
    }
    message monitor {
	message ber {
           double ber = 1 ;
        }
        double osnr = 2 ;
    }
}
message optical_channel {
    string opticalchannelid = 1 ;
    string coreid = 2 ;
    string modeid = 3 ;
    message frequency_slot {
    }
}
message slice {
    message sliceid {
    }
    message optical_channel {
    }
    message optical_signal {
    }
}
message sliceid {
    string sliceid = 1 ;
}
message transceiver {
    string transceiverid = 1 ;
    message slice {
    }
}
message transceiver_state {
    string transceiverid = 1 ;
    message slice {
    }
}


service TransceiverService {
  rpc SetTransceiver (transceiver) returns (empty) {}
  rpc GetBer(sliceid) returns (stream optical_signal.monitor.ber) {}

}

