# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import sliceable_transceiver_sdm_service_pb2 as sliceable__transceiver__sdm__service__pb2


class TransceiverServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SetTransceiver = channel.unary_unary(
        '/sliceable_transceiver_sdm_service.TransceiverService/SetTransceiver',
        request_serializer=sliceable__transceiver__sdm__service__pb2.transceiver.SerializeToString,
        response_deserializer=sliceable__transceiver__sdm__service__pb2.empty.FromString,
        )
    self.GetBer = channel.unary_stream(
        '/sliceable_transceiver_sdm_service.TransceiverService/GetBer',
        request_serializer=sliceable__transceiver__sdm__service__pb2.sliceid.SerializeToString,
        response_deserializer=sliceable__transceiver__sdm__service__pb2.ber.FromString,
        )


class TransceiverServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def SetTransceiver(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetBer(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_TransceiverServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SetTransceiver': grpc.unary_unary_rpc_method_handler(
          servicer.SetTransceiver,
          request_deserializer=sliceable__transceiver__sdm__service__pb2.transceiver.FromString,
          response_serializer=sliceable__transceiver__sdm__service__pb2.empty.SerializeToString,
      ),
      'GetBer': grpc.unary_stream_rpc_method_handler(
          servicer.GetBer,
          request_deserializer=sliceable__transceiver__sdm__service__pb2.sliceid.FromString,
          response_serializer=sliceable__transceiver__sdm__service__pb2.ber.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'sliceable_transceiver_sdm_service.TransceiverService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
